{"ast":null,"code":"var _jsxFileName = \"/Users/griffincooper/Downloads/Website for Hackathon/src/components/ParameterBox2.js\";\nimport styles from \"./ParameterBox2.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ParameterBox2 = () => {\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: styles.parameterbox1,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.frame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.content,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.title,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.parameter,\n          children: \"Neurons Per Layer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.dividerWrapper,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.divider,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.line\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.descLoremIpsum,\n        children: `Typically, smaller networks with fewer neurons per layer are preferred to reduce computational overhead. As the complexity of the task grows, larger networks with more neurons per layer may be necessary to better represent the structure of the problem. You can input any number of neurons and layers. An example of two layers of 128 and a final layer of 64 would look like: [128, 128, 64] `\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.typeInResponse,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.accountBox\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.typeYourAnswer,\n        children: \"Type your value here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n_c = ParameterBox2;\nexport default ParameterBox2;\nvar _c;\n$RefreshReg$(_c, \"ParameterBox2\");","map":{"version":3,"names":["styles","jsxDEV","_jsxDEV","ParameterBox2","className","parameterbox1","children","frame","fileName","_jsxFileName","lineNumber","columnNumber","content","title","parameter","dividerWrapper","divider","line","descLoremIpsum","typeInResponse","accountBox","typeYourAnswer","_c","$RefreshReg$"],"sources":["/Users/griffincooper/Downloads/Website for Hackathon/src/components/ParameterBox2.js"],"sourcesContent":["import styles from \"./ParameterBox2.module.css\";\n\nconst ParameterBox2 = () => {\n  return (\n    <section className={styles.parameterbox1}>\n      <div className={styles.frame} />\n      <div className={styles.content}>\n        <div className={styles.title}>\n          <div className={styles.parameter}>Neurons Per Layer</div>\n        </div>\n        <div className={styles.dividerWrapper}>\n          <div className={styles.divider}>\n            <div className={styles.line} />\n          </div>\n        </div>\n        <div\n          className={styles.descLoremIpsum}\n        >{`Typically, smaller networks with fewer neurons per layer are preferred to reduce computational overhead. As the complexity of the task grows, larger networks with more neurons per layer may be necessary to better represent the structure of the problem. You can input any number of neurons and layers. An example of two layers of 128 and a final layer of 64 would look like: [128, 128, 64] `}</div>\n      </div>\n      <div className={styles.typeInResponse}>\n        <div className={styles.accountBox} />\n        <div className={styles.typeYourAnswer}>Type your value here</div>\n      </div>\n    </section>\n  );\n};\n\nexport default ParameterBox2;\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAC1B,oBACED,OAAA;IAASE,SAAS,EAAEJ,MAAM,CAACK,aAAc;IAAAC,QAAA,gBACvCJ,OAAA;MAAKE,SAAS,EAAEJ,MAAM,CAACO;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChCT,OAAA;MAAKE,SAAS,EAAEJ,MAAM,CAACY,OAAQ;MAAAN,QAAA,gBAC7BJ,OAAA;QAAKE,SAAS,EAAEJ,MAAM,CAACa,KAAM;QAAAP,QAAA,eAC3BJ,OAAA;UAAKE,SAAS,EAAEJ,MAAM,CAACc,SAAU;UAAAR,QAAA,EAAC;QAAiB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtD,CAAC,eACNT,OAAA;QAAKE,SAAS,EAAEJ,MAAM,CAACe,cAAe;QAAAT,QAAA,eACpCJ,OAAA;UAAKE,SAAS,EAAEJ,MAAM,CAACgB,OAAQ;UAAAV,QAAA,eAC7BJ,OAAA;YAAKE,SAAS,EAAEJ,MAAM,CAACiB;UAAK;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACNT,OAAA;QACEE,SAAS,EAAEJ,MAAM,CAACkB,cAAe;QAAAZ,QAAA,EAChC;MAAsY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7Y,CAAC,eACNT,OAAA;MAAKE,SAAS,EAAEJ,MAAM,CAACmB,cAAe;MAAAb,QAAA,gBACpCJ,OAAA;QAAKE,SAAS,EAAEJ,MAAM,CAACoB;MAAW;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrCT,OAAA;QAAKE,SAAS,EAAEJ,MAAM,CAACqB,cAAe;QAAAf,QAAA,EAAC;MAAoB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEd,CAAC;AAACW,EAAA,GAvBInB,aAAa;AAyBnB,eAAeA,aAAa;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}